from aiogram import Router, types, F
from aiogram.filters import Command

from API.weather.get_weather import get_weather_5_day
from bot_logging.logger import logger

router_weather = Router()


@router_weather.message(Command('get_weather_5_days'))
async def get_weather_5_days_bot(message: types.Message):
    try:
        await message.answer(
            '–í—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –ø–æ–≥–æ–¥–∞ –±—ã–ª–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –ø–æ —Ç–µ–∫—É—â–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é üó∫, –µ—Å–ª–∏ –¥–∞,'
            '—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ "–¥–∞", –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ "–Ω–µ—Ç "')

        @router_weather.message(F.text.contains('–¥–∞'))
        async def get_weather_cur_location(message: types.Message):
            try:
                data_weather = get_weather_5_day()
                await message.answer('–ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–≥–æ–¥—ã...')
                if not data_weather:
                    for day_weather in data_weather:
                        await message.answer(day_weather)
                else:
                    await message.answer('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
            except Exception as e:
                logger.log("error",
                           f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ get_weather_cur_location —Ö—ç–Ω–¥–ª–µ—Ä–∞ "
                           f"/get_weather_5_days_bot {str(e)}")

        @router_weather.message(F.text.contains('–Ω–µ—Ç'))
        async def another_location_input(message: types.Message):
            try:
                await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ üèô –ø–æ —à–∞–±–ª–æ–Ω—É "–≥–æ—Ä–æ–¥:"')
            except Exception as e:
                logger.log("error",
                           f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ another_location_input —Ö—ç–Ω–¥–ª–µ—Ä–∞ "
                           f"/get_weather_5_days_bot {str(e)}")

            @router_weather.message(F.text.contains('–≥–æ—Ä–æ–¥:'))
            async def get_weather_another_location(message: types.Message):
                try:
                    city = message.text.split(':')[1]
                    data_weather = get_weather_5_day(city)
                    await message.answer('–ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–≥–æ–¥—ã...')
                    if data_weather:
                        for day_weather in data_weather:
                            await message.answer(day_weather)
                    else:
                        await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞')
                except Exception as e:
                    logger.log("error",
                               f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ get_weather_another_location —Ö—ç–Ω–¥–ª–µ—Ä–∞ "
                               f"/get_weather_5_days_bot {str(e)}")
    except Exception as e:
        logger.log('error', f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ /get_weather_5_days {str(e)}")
        await message.answer(
            '–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –±–æ—Ç–∞, –≤ —Ç–µ—á–µ–Ω–∏–µ 6 —á–∞—Å–æ–≤ –±—É–¥–µ—Ç —Ä–µ—à–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞')
