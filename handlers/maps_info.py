from aiogram import Router, types, F
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.types.input_file import FSInputFile

from API.maps.get_info_about_address import get_location, get_image_location
from bot_logging.logger import logger

router_maps = Router()


@router_maps.message(Command('get_image_place'))
async def get_image_place(message: types.Message):
    try:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å üè°, –Ω–∞–ø—Ä–∏–º–µ—Ä –õ–µ–Ω–∏–Ω–∞ 52, –ö–µ–º–µ—Ä–æ–≤–æ, <b>–ø–æ —à–∞–±–ª–æ–Ω—É "–∞–¥—Ä–µ—Å: "</b>',
                             parse_mode=ParseMode.HTML)

        @router_maps.message(F.text.contains('–∞–¥—Ä–µ—Å: '))
        async def get_address(message: types.Message):
            await message.answer('–ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥—Ä–µ—Å–∞...')
            location = get_location(message.text.split('–∞–¥—Ä–µ—Å: ')[1])
            await message.answer(f'<b>{location}</b> - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–∞', parse_mode=ParseMode.HTML)
            await message.answer('–ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏–¥—ë—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç—ã...')
            get_image_location(location)
            await message.answer_photo(FSInputFile('map.png'))

    except Exception as e:
        logger.log('error', f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ /get_image_place {str(e)}")
        await message.answer(
            '–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –±–æ—Ç–∞, –≤ —Ç–µ—á–µ–Ω–∏–µ 6 —á–∞—Å–æ–≤ –±—É–¥–µ—Ç —Ä–µ—à–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞')
